lib/rpc/connection.proto:service ConnectionService {
service/authentication/authentication.proto:service AuthenticationClient {
service/authentication/authentication.proto:service AuthenticationServer {
service/channel/definition/channel.proto:service Channel {
service/channel/definition/channel.proto:service ChannelOwner {
service/channel/definition/channel.proto:service ChannelSubscriber {
service/channel_invitation/definition/channel_invitation.proto:service ChannelInvitationService {
service/channel_invitation/definition/channel_invitation.proto:service ChannelInvitationNotify {
service/chat/definition/chat.proto:service ChatService {
service/exchange/exchange.proto:service ExchangeService {
service/exchange/exchange.proto:service ExchangeNotify {
service/followers/definition/followers.proto:service FollowersService {
service/followers/definition/followers.proto:service FollowersNotify {
service/friends/definition/friends.proto:service FriendsService {
service/friends/definition/friends.proto:service FriendsNotify {
service/game_master/game_master.proto:service GameMaster {
service/game_master/game_master.proto:service GameMasterSubscriber {
service/game_master/game_master.proto:service GameFactorySubscriber {
service/game_utilities/game_utilities.proto:service GameUtilities {
service/notification/notification.proto:service NotificationService {
service/notification/notification.proto:service NotificationListener {
service/party/definition/party.proto:service PartyService {
service/presence/presence.proto:service PresenceService {
service/search/search.proto:service SearchService {
service/server_pool/server_pool.proto:service ServerPoolService {
service/storage/storage.proto:service StorageService {
service/toon/toon_external.proto:service ToonServiceExternal {
service/user_manager/user_manager.proto:service UserManagerService {
service/user_manager/user_manager.proto:service UserManagerNotify {
